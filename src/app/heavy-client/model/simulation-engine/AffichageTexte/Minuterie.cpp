///////////////////////////////////////////////////////////////////////////
/// @file Minuterie.cpp
/// @author Simon-Pierre Desjardins
/// @date 2017-03-23
/// @version 3.0
///
/// @addtogroup inf2990 INF2990
/// @{
///////////////////////////////////////////////////////////////////////////

#include <chrono>
#include <string>
#include <FTGL/ftgl.h>
#include "Minuterie.h"


////////////////////////////////////////////////////////////////////////
///
/// @fn Minuterie::Minuterie()
///
/// Constructeur par défaut.
///
/// @return Aucune (constructeur).
///
////////////////////////////////////////////////////////////////////////
Minuterie::Minuterie()
{
    reinitialiserChrono();
}


////////////////////////////////////////////////////////////////////////
///
/// @fn Minuterie::~Minuterie()
///
/// Destructeur.
///
/// @return Aucune (destructeur).
///
////////////////////////////////////////////////////////////////////////
Minuterie::~Minuterie()
{
}




////////////////////////////////////////////////////////////////////////
///
/// @fn void Minuterie::reinitialiserChrono()
///
/// Fonction qui permet de réinitialiser (0) le chronomètre de l'affichage.
///
/// @return Aucune.
///
////////////////////////////////////////////////////////////////////////
void Minuterie::reinitialiserChrono()
{
    debut_ = std::chrono::system_clock::now();
	duree_ = 0.0;
}


////////////////////////////////////////////////////////////////////////
///
/// @fn void Minuterie::obtenirDuree()
///
/// Fonction qui permet d'obtenir la durée écoulé du mode.
///
/// @return durée écoulée (double)
///
////////////////////////////////////////////////////////////////////////
double Minuterie::obtenirDuree()
{
	duree_ = 0.0;
	std::chrono::time_point<std::chrono::system_clock> courant = std::chrono::system_clock::now();
	duree_ = std::chrono::duration<double>(courant - debut_).count() + duree_;
	return duree_;
}

///////////////////////////////////////////////////////////////////////////////
/// @}
///////////////////////////////////////////////////////////////////////////////